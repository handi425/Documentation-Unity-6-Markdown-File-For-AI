{
  "path": "docManual\\urp\\upgrade-guide-11-0-x.html",
  "chunks": [
    "Unity - Manual: Upgrade to version 11.0.x of the Universal Render Pipeline Manual Scripting API unity.com Version: Unity 6 (6000.0) Supported Legacy Language : English English 中文 日本語 한국어 Unity Manual Version: Unity 6 Select a different version Language : English English 中文 日本語 한국어 Rendering Render pipelines Using the Universal Render Pipeline Get started with URP Installing and upgrading URP Upgrade URP Upgrade to version 11.0.x of the Universal Render Pipeline Upgrade to URP 12 (Unity 2021.2) Upgrade to version 10.1.x of the Universal Render Pipeline Upgrade to version 11.0.x of the Universal Render Pipeline This page describes how to upgrade from an older version of the Universal Render Pipeline A series of operations that take the contents of a Scene, and displays them on a screen. Unity lets you choose from pre-built render pipelines, or write your own. More info See in Glossary (URP) to version 11.0.x. Upgrading from URP 10.0.x–10.2.x The file names of the following Shader Graph",
    "shaders were renamed. The new file names do not have spaces: Autodesk Interactive Autodesk Interactive Masked Autodesk Interactive Transparent If your code uses the Shader.Find() method to search for the shaders, remove spaces from the shader A program that runs on the GPU. More info See in Glossary names, for example, Shader.Find(\"AutodeskInteractive) . Upgrading from URP 7.2.x and later releases URP 11.x.x does not support the package Post-Processing A process that improves product visuals by applying filters and effects before the image appears on screen. You can use post-processing effects to simulate physical camera and film properties, for example Bloom and Depth of Field. More info post processing, postprocessing, postprocess See in Glossary Stack v2. If your Project uses the package Post-Processing Stack v2, migrate the effects that use that package first. DepthNormals Pass Starting from version 10.0.x, URP can generate a normal texture called _CameraNormalsTexture . To render",
    "to this texture in your custom shader, add a Pass with the name DepthNormals . For an example, check the implementation in Lit.shader . Screen Space Ambient Occlusion (SSAO) URP 10.0.x implements the Screen Space Ambient Occlusion A method to approximate how much ambient light (light not coming from a specific direction) can hit a point on a surface. See in Glossary (SSAO) effect. If you intend to use the SSAO effect with your custom shaders, consider the following entities related to SSAO: The _SCREEN_SPACE_OCCLUSION keyword. Input.hlsl contains the new declaration float2 normalizedScreenSpaceUV in the InputData struct. Lighting.hlsl contains the AmbientOcclusionFactor struct with the variables for calculating indirect and direct occlusion: struct AmbientOcclusionFactor { half indirectAmbientOcclusion; half directAmbientOcclusion; }; Lighting.hlsl contains the following function for sampling the SSAO texture: half SampleAmbientOcclusion(float2 normalizedScreenSpaceUV) Lighting.hlsl",
    "contains the following function: AmbientOcclusionFactor GetScreenSpaceAmbientOcclusion(float2 normalizedScreenSpaceUV) To support SSAO in custom shader, add the DepthNormals Pass and the _SCREEN_SPACE_OCCLUSION keyword the the shader. For an example, check Lit.shader . If your custom shader implements custom lighting functions, use the function GetScreenSpaceAmbientOcclusion(float2 normalizedScreenSpaceUV) to get the AmbientOcclusionFactor value for your lighting calculations. Shadow Normal Bias In 11.0.x the formula used to apply Shadow Normal Bias has been slightly fix in order to work better with punctual lights. As a result, to match exactly shadow outlines from earlier revisions, the parameter might to be adjusted in some scenes A Scene contains the environments and menus of your game. Think of each unique Scene file as a unique level. In each Scene, you place your environments, obstacles, and decorations, essentially designing and building your game in pieces. More info See in",
    "Glossary . Typically, using 1.4 instead of 1.0 for a Directional light is usually enough. Upgrading from URP 7.0.x–7.1.x Upgrade to URP 7.2.0 first. Refer to Upgrading to version 7.2.0 of the Universal Render Pipeline . URP 8.x.x does not support the package Post-Processing Stack v2. If your Project uses the package Post-Processing Stack v2, migrate the effects that use that package first. Upgrade to URP 12 (Unity 2021.2) Upgrade to version 10.1.x of the Universal Render Pipeline Copyright ©2005-2025 Unity Technologies. All rights reserved. Built from 6000.0.36f1 (02b661dc617c). Built on: 2025-01-14. Tutorials Community Answers Knowledge Base Forums Asset Store Terms of use Legal Privacy Policy Cookies Do Not Sell or Share My Personal Information Your Privacy Choices (Cookie Settings)"
  ]
}