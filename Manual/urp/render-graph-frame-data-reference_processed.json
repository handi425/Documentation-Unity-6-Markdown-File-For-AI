{
  "path": "docManual\\urp\\render-graph-frame-data-reference.html",
  "chunks": [
    "Unity - Manual: Frame data textures reference for URP Manual Scripting API unity.com Version: Unity 6 (6000.0) Supported Legacy Language : English English 中文 日本語 한국어 Unity Manual Version: Unity 6 Select a different version Language : English English 中文 日本語 한국어 Rendering Render pipelines Using the Universal Render Pipeline Custom rendering and post-processing in URP Render graph system in URP Frame data in the render graph system in URP Frame data textures reference for URP Get the current framebuffer from GPU memory in URP Draw objects in the render graph system in URP Frame data textures reference for URP You can fetch the following textures from the frame data. Color data Property Texture URP shader A program that runs on the GPU. More info See in Glossary pass that writes to the texture activeColorTexture The color texture the camera A component which creates an image of a particular viewpoint in your scene. The output is either drawn to the screen or captured as a texture. More",
    "info See in Glossary currently targets. Any pass, depending on your settings afterPostProcessColor The main color texture after URP’s post processing passes. UberPost backBufferColor The color texture of the screen back buffer. If you use post-processing A process that improves product visuals by applying filters and effects before the image appears on screen. You can use post-processing effects to simulate physical camera and film properties, for example Bloom and Depth of Field. More info post processing, postprocessing, postprocess See in Glossary , URP writes to this texture at the end of rendering, unless you enable HDR Debug Views . Refer to debugScreenTexture for more information. Any pass, depending on your settings cameraColor The main color texture for the camera. You can store multiple samples in this texture if you enable Multisample Anti-aliasing (MSAA) . Any pass, depending on your settings cameraOpaqueTexture A texture with the opaque objects in the scene A Scene contains",
    "the environments and menus of your game. Think of each unique Scene file as a unique level. In each Scene, you place your environments, obstacles, and decorations, essentially designing and building your game in pieces. More info See in Glossary , if you enable Opaque Texture in the URP Asset . CopyColor debugScreenTexture If you enable HDR Debug Views , URP writes the output of post-processing to this texture instead of backBufferColor . uberPost and finalPost Depth data Property Texture URP shader pass that writes to the texture activeDepthTexture The depth buffer A memory store that holds the z-value depth of each pixel in an image, where the z-value is the depth for each rendered pixel from the projection plane. More info See in Glossary the GPU currently renders to. This is either backBufferDepth or cameraDepth . Any pass, depending on your settings backBufferDepth The depth buffer of the screen back buffer. If you target backBufferDepth , any changes you make are overwritten when",
    "URP blits A shorthand term for “bit block transfer”. A blit operation is the process of transferring blocks of data from one place in memory to another. See in Glossary cameraDepth to the back buffer near the end of a frame. Any pass, depending on your settings cameraDepth The depth buffer from the render texture A special type of Texture that is created and updated at runtime. To use them, first create a new Render Texture and designate one of your Cameras to render into it. Then you can use the Render Texture in a Material just like a regular Texture. More info See in Glossary the camera currently renders to. Avoid targeting cameraDepth , because URP uses this buffer for most of its own rendering. Any pass, depending on your settings cameraDepthTexture A depth texture copy of the depth buffer, if you enable Depth Priming Mode in the renderer or Depth Texture in the active URP Asset . If you use the Deferred render path , cameraDepthTexture is a color format instead of a depth format.",
    "CopyDepth or DepthPrepass cameraNormalsTexture The scene normals texture. Contains the scene depth for objects with shaders that have a DepthNormals pass. DepthNormals prepass Shadow data Property Texture URP shader pass that writes to the texture additionalShadowsTexture The additional shadow map. ShadowCaster mainShadowsTexture The main shadow map. ShadowCaster Decal data Property Texture URP shader pass that writes to the texture dBuffer The Decals texture. For more information about the decals texture, refer to DBuffer . Decals dBufferDepth The Decals depth texture. Refer to DBuffer . Decals Motion vector data Property Texture URP shader pass that writes to the texture Property Texture URP shader pass that writes to the texture motionVectorColor The motion vectors color texture. Refer to motion vectors . Camera Motion Vectors and MotionVectors motionVectorDepth The motion vectors depth texture. Refer to motion vectors . Camera Motion Vectors and MotionVectors Other data Property",
    "Texture URP shader pass that writes to the texture gBuffer The G-buffer textures. Refer to G-buffer . GBuffer internalColorLut The internal look-up textures (LUT) texture. InternalLut overlayUITexture The overlay UI (User Interface) Allows a user to interact with your application. Unity currently supports three UI systems. More info See in Glossary texture. DrawScreenSpaceUI renderingLayersTexture The Rendering Layers texture. Refer to Rendering layers DrawOpaques or the DepthNormals prepass, depending on your settings. ssaoTexture The Screen Space Ambient Occlusion (SSAO) texture. Refer to Ambient occlusion A method to approximate how much ambient light (light not coming from a specific direction) can hit a point on a surface. See in Glossary . SSAO Additional resources Using frame data in the render graph system Get the current framebuffer from GPU memory in URP Draw objects in the render graph system in URP Copyright ©2005-2025 Unity Technologies. All rights reserved. Built from",
    "6000.0.36f1 (02b661dc617c). Built on: 2025-01-14. Tutorials Community Answers Knowledge Base Forums Asset Store Terms of use Legal Privacy Policy Cookies Do Not Sell or Share My Personal Information Your Privacy Choices (Cookie Settings)"
  ]
}