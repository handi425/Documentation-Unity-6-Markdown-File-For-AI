{
  "path": "docManual\\urp\\2d-light-batching-intro.html",
  "chunks": [
    "Unity - Manual: Introduction to 2D light batching Manual Scripting API unity.com Version: Unity 6 (6000.0) Supported Legacy Language : English English 中文 日本語 한국어 Unity Manual Version: Unity 6 Select a different version Language : English English 中文 日本語 한국어 Working in Unity 2D in Unity 2D game development in URP 2D lighting in URP Optimizing 2D lights Introduction to 2D light batching Optimize 2D lights Check how Unity batches lights Introduction to 2D light batching Use the Light Batching Debugger to visualize how Unity batches 2D Lights and Shadow Casters according to the Sorting Layers they target in the scene A Scene contains the environments and menus of your game. Think of each unique Scene file as a unique level. In each Scene, you place your environments, obstacles, and decorations, essentially designing and building your game in pieces. More info See in Glossary . For Unity to batch Sorting Layers, the layers need to fulfill the following conditions: The layers share the same",
    "sets of Lights; that is, the 2D Lights target the same Sorting Layers. The layers share the same sets of Shadow Casters; that is, the Shadow Casters target the same Sorting Layers. The debugger compares adjacent batches and highlights the Lights or Shadow Casters that target each Sorting Layer, and displays which Lights or Shadow Casters you need to add or remove for Unity to be able to batch the Sorting Layers. Check how Unity batches 2D lights in your project with the Light Batching Debugger window. . Examples of different batching scenarios The following are examples of how Unity batches Lights and Shadow Casters under different conditions. Each example consists of two Sorting Layers named BG and Default , and two Lights named A and B . Scenario 1 Conditions: Lights A and B target both the BG and Default Sorting Layers. Shadows are disabled for both Lights; that is, there are no Shadow Casters. Batch Case 1 Result: Unity batches both Lights together as they target the same layers.",
    "Batch Case 1 Scenario 2 Conditions: Light A targets BG , while Light B targets Default . Shadows are disabled for both Lights. Batch Case 2 Result: Unity doesn’t batch the layers as both Lights target different Sorting Layers. Batch Case 2 Scenario 3 Conditions: Both Lights A and B target both BG and Default Sorting Layers. Shadows are enabled for both Lights and the Shadow Casters target both the BG and Default layers. Batch Case 3 Result: Unity batches the layers as both Lights and sets of Shadow Casters target the same layers. Batch Case 3 Scenario 4 Conditions: * Both Lights A and B target both BG and Default . * Shadows are only enabled for Light A , and the Shadow Caster targets both BG and Default . Batch Case 4 Result: Unity batches the layers as the Shadow Caster targets both Sorting Layers so that both layers share the same shadow settings, making the light texture the same for both layers. Batch Case 4 Scenario 5 Conditions: Both Lights A and B target both the BG and Default",
    "Sorting Layers. Shadows are enabled for both Lights, and the Shadow Caster only targets the BG layer. Batch Case 5 Result: Unity doesn’t batch the layers as the Shadow Caster targets one layer and not the other; this results in the light textures of both layers not being the same and unable to be batched. Optimize 2D lights Check how Unity batches lights Copyright ©2005-2025 Unity Technologies. All rights reserved. Built from 6000.0.36f1 (02b661dc617c). Built on: 2025-01-14. Tutorials Community Answers Knowledge Base Forums Asset Store Terms of use Legal Privacy Policy Cookies Do Not Sell or Share My Personal Information Your Privacy Choices (Cookie Settings)"
  ]
}